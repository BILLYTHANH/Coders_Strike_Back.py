import sys
import math
# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.
c=0
# game loop
while True:
    # next_checkpoint_x: x position of the next check point
    # next_checkpoint_y: y position of the next check point
    # next_checkpoint_dist: distance to the next checkpoint
    # next_checkpoint_angle: angle between your pod orientation and the direction of the next checkpoint
    x, y, next_checkpoint_x, next_checkpoint_y, next_checkpoint_dist, next_checkpoint_angle = [int(i) for i in input().split()]
    opponent_x, opponent_y = [int(i) for i in input().split()]
    if next_checkpoint_angle > 90 or next_checkpoint_angle < -90:
        thrust = 0
       
    else:
        if next_checkpoint_angle == 0 and c == 0 and next_checkpoint_dist >= 3000:
            thrust = "BOOST"
            c = 1
           
        elif next_checkpoint_dist < 2000 :
            thrust = abs(round(next_checkpoint_dist/200)*10)
       
        else:
            thrust = 100
    # You have to output the target position
    # followed by the power (0 <= thrust <= 100)
    # i.e.: "x y thrust"
    print(str(next_checkpoint_x) + " " + str(next_checkpoint_y) + " {0}".format(thrust))
